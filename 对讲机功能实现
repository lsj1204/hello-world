对讲机
一、概述
1.待开发软件的一般描述 
开发背景随着4G时代的到来，网络更加方便了人们的生活，智能手机也是人手一部，局限于传统电话、短信的通信系统已经处于过时的境地，语音、文字、视频聊天已被越来越多的人所应用。既免除了传统通信资费过高的问题，又增添了面向用户需求的新功能。如，有网就有免费通话，再也不担心话费开销，可以随时随地联系朋友和家人。微信的语音聊天做得非常成功，使得老爸老妈也能轻松使用，减少了两代人的代沟。很多社交软件已经相当完善的实现了此功能，所以这里的软件开发不带任何商业意义。
2.应达到的目标
功能完善、简单、美观、性能好。
3.项目概述
实现语音对讲功能，至少支持2人。 
要求如下：对讲功能（必选）；
文字聊天功能（必选）；
视频功能（可选）；
上述功能需要在Android系统上实现演示（必选）。
4.系统特性
界面美观，功能完善 ，有良好的用户体验；
简单、便捷；
实时性好、安全性高、可靠性好。
5.用户特征和水平
各个年龄段，广泛的人群，文化水平参差不齐，所以软件应该简明易懂，方便操作。
6.运行环境
手机客户端应用（目前仅Android）。        
二、需求分析
1.系统需求分析
系统的主要功能模块为信息录制（语音）、信息的抓取、连接的建立、信息发送、信息的接收、信息的显示。在软件的设计中，分为前台和后台两个部分设计，前台客户端主要用于提供用户发送消息（文字、语音）、发起视频会话，接收消息，接受视频会话，关闭会话等功能，后台服务器主要功能有：建立两台设备之间的连接，进行消息的实时传递等功能，消息的发送要经过中转站。

图 1 系统整体流程
2.待开发软件的具体需求分析
用户首先进行网络的连接（与中转服务器连接在同一个网络中），然后选择中转路由IP地址及端口号，进行连接，连接成功后输入要接收发送的消息的地址，进行验证，验证通过需要发送信息时选择要发送的信息相应形式对要发送信息进行编辑。
进行语音对讲就选择语音框对信息进行录制然后发送，录制过程中要显示状态的变化以区别录制状态与常态的区别（比如录制键颜色变暗，再次触摸无反应），录制结束后要将相应录制情况对应的信息显示给发送用户，其中牵扯到信息过短取消发送，手动取消发送和录制成功进行发送。可以录制成功后再次听自己录制的语音是否有问题 。后台实现信息发送，接收者收到信息后可以通过点击收到的语音条获取语音内容。

进行文字聊天就在输入框输入要发送的信息，若设置字数限制，字数超过限制时会收到提示，进行提醒，字数没有问题时可以直接点击发送按钮进行发送。若字数不设限，可以直接进行发送。接收者在两个人的聊天界面会直接看到发过来的消息。（扩展功能：接收者那里可以显示“对方正在输入”等字样。）

视频通话由发送者向信息接收者发送请求，当接收者同意时才能进行会话连接，否则单方不能进行通信，通过摄像头和录音系统来进行信息采集、转发从而进行视频通信。当接收者或发送者其中一方请求结束通信，通信即结束。

三、软件设计
1.实现双方连接的建立：Socket实现收发双方建立连接。
2.实现文字消息的发送：使用Android的广播来实现文字消息的发送。
3.实现录音：用Android的MediaRecord实现录音功能。录音存放在本地文件夹中。
4.实现录音的发送：将录音以比特流的形式发送（非MP3）。
5.实现界面：分功能区进行实现，录音功能一般情况下隐藏，当触发特殊按键时出现录音选项。
四、软件实现
1.发送方创建步骤：
A.创建一个DatagramSocket对象
DatagramSocket socket = new  DatagramSocket (7007);
B.创建一个InetAddress，相当于是地址
InetAddress serverAddress = InetAddress.getByName("想要发送到的那个IP地址"); 
C.随意发送一个数据
String str = "hello";
D.转为byte类型
byte data[] = str.getBytes();
  E.创建一个DatagramPacket 对象，并指定要将这个数据包发送到网络当中的哪个地址，以及端口号
DatagramPacket package = new DatagramPacket (data , data.length , serverAddress , 7007);
F.调用DatagramSocket对象的send方法 发送数据
socket . send(package);
 
2.接收方创建步骤：
A.创建一个DatagramSocket对象，并指定监听的端口号
DatagramSocket socket = new  DatagramSocket (7007);
B.创建一个byte数组用于接收
byte data[] = new byte[1024];
C.创建一个空的DatagramPackage对象
DatagramPackage package = new DatagramPackage(data , data.length);
D.使用receive方法接收发送方所发送的数据,同时这也是一个阻塞的方法
socket.receive(package); 
E.得到发送过来的数据
new String(package.getData() , package.getOffset() , package.getLength());

          
3.传送文字消息的实现：
Android中有广播，用来实现SMS的传递和接收。
发送：
A.获取接收者的IP地址和信息内容  
	B.获得短信发送管理实例 
C.构造PendingIntent启动短信发送状态监控广播
D.调用发送短信函数，传入参数发送短信 
E.构造广播接收器内部类监控短信是否发送成功
F.获得广播接收器实例和IntentFilter实例，注册广播接收器
G.在onDestroy()中取消注册的广播接收器 
H.在AndroidManifest.xml文件中加入短信发送权限
接收：
A.创建内部广播接收器类，接收系统发出的短信广播 
	B.从获得的内容中解析出短信发送者和短信内容
C.在Activity中注册广播 
D.添加接收短信权限
         

            






4.录音的实现：
Android中有一个实现录音的类MediaRecord。
录音实现步骤：
A.在AndroidManifest.xml文件中声名权限。
B.实现界面设计。
C.实现录音功能，录音，自动保存（存在本地），录音播放。


图 4 MediaRecord类的状态

点击“Hello”键弹出录音功能，点击“START”键开始录音，点击“STOP”键结束录音，录音结束自动发送，可以按下“PLAY”键听刚才的录音，按下“FINISH”结束录音的播放。
         
         

五、总结
通过本次实践掌握了录音的实现及多类消息传递的实现，还有团队合作的重要。在实践过程中也遇到了一些困难，通过大家相互帮助解决了一些。例如录音如何传递，双方以怎样的形式来进行通信，键盘一退出就不能进行后续输入了等问题。在遇到这些问题时我们首先进行了百度，有的问题一些学术论坛，微博，知乎等并不能给出确切解决方法，我们又去查阅了些资料，问了下大神。在这次实践中老师也给了我们很大的建议。像是录音完成后的传递问题，录音的传递与文字的传递不同，以MP3格式传递很好，但是由于一些原因我们选择了字节流来实现传递录音。还有收发双方的建立我们选择了中间服务器来帮助进消息传递，老师提出P2P传递方式，用最新的android技术RXJava来实现消息的传递也更为方便，通过“订阅”来实现消息的传递。
六、参考文献
[1]郭霖.第一行代码.人民邮电出版社.2014-8.
[2]Android-仿微信语音聊天.http://www.imooc.com/learn/383.
[3]高永强.Java编程艺术.清华大学出版社.2009-7-1.
